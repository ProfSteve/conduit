#! /usr/bin/env python

import sys, os, unittest
from glob import glob

testsdir = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))
sys.path.insert(0, testsdir)

os.environ['TEST_DIRECTORY'] = 'tmp'
if not os.path.exists('tmp'):
    os.mkdir('tmp')

import soup

known_failures = [
    'Evo',              # Will trash your main evo :/
    'Audio', 'Music'    # GStreamer hanging
    'Video',            # Probably same as ^
]

from test_datatypes import *
from test_dataprovider import *
from test_synchronization import *

def run_tests(tests, verbose=False, do_coverage=False):
    runner = unittest.TextTestRunner(verbosity=2 if verbose else 1)

    if do_coverage:
        import coverage
        coverage.erase()
        coverage.start()

    result = runner.run(unittest.TestSuite(tests))

    if do_coverage:
        coverage.stop()
        modules = glob('conduit/*.py')+glob('conduit/*/*.py')+glob('conduit/*/*/*.py')
        coverage.report(modules, ignore_errors=1, show_missing=0)
        coverage.erase()

    sys.exit(not result.wasSuccessful())

def list_tests(tests):
    for test in tests:
        print test.name(), test.testMethodName
    sys.exit(0)


if __name__ == "__main__":
    import optparse

    parser = optparse.OptionParser(usage="usage: %prog [options] arg1 arg2")

    # Options about which tests are run
    parser.add_option("-x", "--exclude", action="append", type="string", dest="exclude",
                      help="Exclude patterns matching PATTERN", metavar="PATTERN")

    # Options about how the tests are run
    parser.add_option("-r", "--randomize", action="store_true", dest="randomize",
                      help="Run tests in a random order")
    parser.add_option("-v", "--verbose", action="store_true", dest="verbose",
                      help="Output lots of noise as tests are run")
    parser.add_option("-c", "--coverage", action="store_true", dest="coverage",
                      help="Enable code coverage")

    # Add the different execution modes..
    parser.add_option("-l", "--list", action="store_const", const="list", dest="mode",
                      help="List tests instead of running them")
    parser.add_option("-e", "--execute", action="store_const", const="execute", dest="mode",
                      help="Run the tests")

    # Set parse defaults
    parser.set_defaults(mode="execute", randomize=False, verbose=False, coverage=False,
                        exclude=known_failures)

    # And parse..
    opts, args = parser.parse_args()

    # Figure out which tests to run
    tests = soup.TestLoader(include=args, exclude=opts.exclude).loadTestsFromMain()

    if opts.randomize:
        import random
        random.shuffle(tests)

    # And run.
    if opts.mode == "execute":
        run_tests(tests, verbose=opts.verbose, do_coverage=opts.coverage)
    elif opts.mode == "list":
        list_tests(tests)

